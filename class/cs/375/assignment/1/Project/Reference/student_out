************** PART 1 TEST 0 **************
Token: ' ' of type 2 (Space)
Token: 'abbbba' of type 1 (AbaIdentifier)
Token: ' ' of type 2 (Space)
Token: 'aba' of type 1 (AbaIdentifier)
Token: 'aa' of type 1 (AbaIdentifier)
Token: ' ' of type 2 (Space)
Token: 'abbbbbbbbbba' of type 1 (AbaIdentifier)
Token: ' ' of type 2 (Space)
Token: ' ' of type 2 (Space)
Token: 'aba' of type 1 (AbaIdentifier)
Token: ' ' of type 2 (Space)
Token: 'abb' of type 0 (Invalid)
Token: ' ' of type 2 (Space)
Token: 'aa' of type 1 (AbaIdentifier)
*******************************************

************** PART 1 TEST 1 **************
Token: '==>' of type 1 (RightArrow)
Token: '(hello)+' of type 2 (Group)
Token: '(world)' of type 2 (Group)
Token: '=>' of type 1 (RightArrow)
Token: '' of type 0 (Invalid)
Skipping one character of input: '>'
Token: '(=>)+' of type 2 (Group)
Token: '++' of type 4 (Increment)
Token: '+' of type 3 (Plus)
Token: '(+ => hello)' of type 2 (Group)
*******************************************

************** PART 1 TEST 2 **************
Token: '&' of type 1 (And)
Token: '@at' of type 0 (Invalid)
Token: '' of type 0 (Invalid)
Skipping one character of input: 't'
Token: '' of type 0 (Invalid)
Skipping one character of input: 'r'
Token: '@a' of type 0 (Invalid)
Token: 'int' of type 0 (Invalid)
Token: 'in' of type 0 (Invalid)
Token: '' of type 0 (Invalid)
Skipping one character of input: '-'
Token: '+++' of type 0 (Invalid)
Token: '&' of type 1 (And)
Token: '+++' of type 0 (Invalid)
Token: '@' of type 0 (Invalid)
Token: '+hello|' of type 0 (Invalid)
Token: '+world' of type 0 (Invalid)
*******************************************

************** PART 2 TEST 3 **************
Token: 'hello' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: 'world__' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: 'This' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: 'is' of type 106 (Is)
Token: ' ' of type 6 (Whitespace)
Token: '__a' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: 'Test' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '_of_' of type 1 (Identifier)
Token: ' \t ' of type 6 (Whitespace)
Token: 'identifiers123' of type 1 (Identifier)
Token: '    ' of type 6 (Whitespace)
Token: 'AND' of type 1 (Identifier)
Token: '  ' of type 6 (Whitespace)
Token: 'whitespace' of type 1 (Identifier)
Token: '\r\n  ' of type 6 (Whitespace)
Token: 'sUch' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: 'aS' of type 1 (Identifier)
Token: '\t\r   ' of type 6 (Whitespace)
Token: 'TABS_and_NEWLINEs' of type 1 (Identifier)
*******************************************

************** PART 2 TEST 4 **************
Token: '123' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '540.99' of type 3 (FloatLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '3.14195f' of type 3 (FloatLiteral)
Token: '5' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '7' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '65.4321e10' of type 3 (FloatLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '1.1e+9' of type 3 (FloatLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '2.2e-8' of type 3 (FloatLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '3' of type 2 (IntegerLiteral)
Token: '.' of type 21 (Dot)
Token: 'ToString' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '0.0' of type 3 (FloatLiteral)
Token: '.' of type 21 (Dot)
Token: '0' of type 2 (IntegerLiteral)
*******************************************

************** PART 2 TEST 5 **************
Token: '"hello"' of type 4 (StringLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '"world"' of type 4 (StringLiteral)
Token: '"this is a test\r\nof string literals"' of type 4 (StringLiteral)
Token: ' ' of type 6 (Whitespace)
Token: ''a'' of type 5 (CharacterLiteral)
Token: ' ' of type 6 (Whitespace)
Token: ''\n'' of type 5 (CharacterLiteral)
Token: ' ' of type 6 (Whitespace)
Token: ''c'' of type 5 (CharacterLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '"can you handle \"this\""' of type 4 (StringLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '"error\' of type 0 (Invalid)
Token: 'j' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '"error two!' of type 0 (Invalid)
*******************************************

************** PART 2 TEST 6 **************
Token: 'class' of type 70 (Class)
Token: ' ' of type 6 (Whitespace)
Token: 'Player' of type 1 (Identifier)
Token: '\n' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n  ' of type 6 (Whitespace)
Token: 'var' of type 152 (Var)
Token: ' ' of type 6 (Whitespace)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'float' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '99.0f' of type 3 (FloatLiteral)
Token: ';' of type 16 (Semicolon)
Token: '\n' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n\n' of type 6 (Whitespace)
Token: 'function' of type 96 (Function)
Token: ' ' of type 6 (Whitespace)
Token: 'main' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: '\n' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n  ' of type 6 (Whitespace)
Token: '// Do some simple test /*\n' of type 7 (SingleLineComment)
Token: '  ' of type 6 (Whitespace)
Token: 'var' of type 152 (Var)
Token: ' ' of type 6 (Whitespace)
Token: 'a' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '5' of type 2 (IntegerLiteral)
Token: ';' of type 16 (Semicolon)
Token: '\n  ' of type 6 (Whitespace)
Token: 'var' of type 152 (Var)
Token: ' ' of type 6 (Whitespace)
Token: 'b' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'int' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '1' of type 2 (IntegerLiteral)
Token: ';' of type 16 (Semicolon)
Token: '\n  ' of type 6 (Whitespace)
Token: 'if' of type 100 (If)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: 'a' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '>' of type 26 (GreaterThan)
Token: ' ' of type 6 (Whitespace)
Token: 'b' of type 1 (Identifier)
Token: ')' of type 13 (CloseParentheses)
Token: '\n  ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n    ' of type 6 (Whitespace)
Token: '++' of type 30 (Increment)
Token: 'a' of type 1 (Identifier)
Token: ';' of type 16 (Semicolon)
Token: '\n    ' of type 6 (Whitespace)
Token: 'b' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '+=' of type 46 (AssignmentPlus)
Token: '-' of type 40 (Minus)
Token: '(' of type 12 (OpenParentheses)
Token: 'a' of type 1 (Identifier)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: 'b' of type 1 (Identifier)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '*' of type 41 (Asterisk)
Token: '+' of type 39 (Plus)
Token: '2' of type 2 (IntegerLiteral)
Token: ';' of type 16 (Semicolon)
Token: '\n    ' of type 6 (Whitespace)
Token: 'Print' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: '"hello\tworld"' of type 4 (StringLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: ';' of type 16 (Semicolon)
Token: ' ' of type 6 (Whitespace)
Token: '/* multi-line "comment"! */' of type 8 (MultiLineComment)
Token: '\n    ' of type 6 (Whitespace)
Token: 'Print' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: '"b's value is: "' of type 4 (StringLiteral)
Token: ',' of type 18 (Comma)
Token: ' ' of type 6 (Whitespace)
Token: 'b' of type 1 (Identifier)
Token: ')' of type 13 (CloseParentheses)
Token: ';' of type 16 (Semicolon)
Token: '\n    ' of type 6 (Whitespace)
Token: 'Print' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ''c'' of type 5 (CharacterLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: ';' of type 16 (Semicolon)
Token: '\n    ' of type 6 (Whitespace)
Token: 'Print' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: '5' of type 2 (IntegerLiteral)
Token: '.' of type 21 (Dot)
Token: 'ToString' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: ';' of type 16 (Semicolon)
Token: '\n    \n    ' of type 6 (Whitespace)
Token: 'for' of type 93 (For)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: 'int' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: 'i' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '0' of type 2 (IntegerLiteral)
Token: ';' of type 16 (Semicolon)
Token: ' ' of type 6 (Whitespace)
Token: 'i' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '<' of type 24 (LessThan)
Token: ' ' of type 6 (Whitespace)
Token: '99' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '/' of type 42 (Divide)
Token: ' ' of type 6 (Whitespace)
Token: '2' of type 2 (IntegerLiteral)
Token: ';' of type 16 (Semicolon)
Token: ' ' of type 6 (Whitespace)
Token: '++' of type 30 (Increment)
Token: 'i' of type 1 (Identifier)
Token: ')' of type 13 (CloseParentheses)
Token: '\n    ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n      ' of type 6 (Whitespace)
Token: 'Print' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: 'i' of type 1 (Identifier)
Token: ')' of type 13 (CloseParentheses)
Token: ';' of type 16 (Semicolon)
Token: '\n    ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n    \n    ' of type 6 (Whitespace)
Token: 'var' of type 152 (Var)
Token: ' ' of type 6 (Whitespace)
Token: 'p' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: 'Player' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: ';' of type 16 (Semicolon)
Token: '\n    ' of type 6 (Whitespace)
Token: 'Print' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: 'p' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Health' of type 1 (Identifier)
Token: ')' of type 13 (CloseParentheses)
Token: ';' of type 16 (Semicolon)
Token: '\n  ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
*******************************************

Press enter/return to exit...
