************** PART 1 TEST 0 **************
Token: '"hello world"' of type 4 (StringLiteral)

Expression
| Expression1
| | Expression2
| | | Expression3
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '"hello world"' (StringLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | EndExpression3
| | EndExpression2
| EndExpression1
EndExpression

Parsing Successful

LiteralNode("hello world")
*******************************************

************** PART 1 TEST 1 **************
Token: '5' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: '3.0' of type 3 (FloatLiteral)

Expression
| Expression1
| | Expression2
| | | Expression3
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '5' (IntegerLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | | Accepted: '+' (Plus)
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '3.0' (FloatLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | EndExpression3
| | EndExpression2
| EndExpression1
EndExpression

Parsing Successful

BinaryOperatorNode(+)
| LiteralNode(5)
| LiteralNode(3.0)
*******************************************

************** PART 1 TEST 2 **************
Token: '9' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '*' of type 41 (Asterisk)
Token: ' ' of type 6 (Whitespace)
Token: '2.0f' of type 3 (FloatLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '*' of type 41 (Asterisk)
Token: ' ' of type 6 (Whitespace)
Token: '1' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '*' of type 41 (Asterisk)
Token: ' ' of type 6 (Whitespace)
Token: '160' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '/' of type 42 (Divide)
Token: ' ' of type 6 (Whitespace)
Token: '5' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '/' of type 42 (Divide)
Token: ' ' of type 6 (Whitespace)
Token: '10.0' of type 3 (FloatLiteral)

Expression
| Expression1
| | Expression2
| | | Expression3
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '9' (IntegerLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | | Accepted: '*' (Asterisk)
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '2.0f' (FloatLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | | Accepted: '*' (Asterisk)
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '1' (IntegerLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | | Accepted: '*' (Asterisk)
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '160' (IntegerLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | | Accepted: '/' (Divide)
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '5' (IntegerLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | | Accepted: '/' (Divide)
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '10.0' (FloatLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | EndExpression3
| | EndExpression2
| EndExpression1
EndExpression

Parsing Successful

BinaryOperatorNode(/)
| BinaryOperatorNode(/)
| | BinaryOperatorNode(*)
| | | BinaryOperatorNode(*)
| | | | BinaryOperatorNode(*)
| | | | | LiteralNode(9)
| | | | | LiteralNode(2.0f)
| | | | LiteralNode(1)
| | | LiteralNode(160)
| | LiteralNode(5)
| LiteralNode(10.0)
*******************************************

************** PART 1 TEST 3 **************
Token: 'a' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: 'b' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: 'c' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: 'd' of type 1 (Identifier)

Expression
| Expression1
| | Expression2
| | | Expression3
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | NameReference
| | | | | | | | | | Accepted: 'a' (Identifier)
| | | | | | | | | EndNameReference
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | EndExpression3
| | EndExpression2
| EndExpression1
| Accepted: '=' (Assignment)
| Expression
| | Expression1
| | | Expression2
| | | | Expression3
| | | | | Expression4
| | | | | | Expression5
| | | | | | | Expression6
| | | | | | | | Expression7
| | | | | | | | | Value
| | | | | | | | | | NameReference
| | | | | | | | | | | Accepted: 'b' (Identifier)
| | | | | | | | | | EndNameReference
| | | | | | | | | EndValue
| | | | | | | | EndExpression7
| | | | | | | EndExpression6
| | | | | | EndExpression5
| | | | | EndExpression4
| | | | EndExpression3
| | | EndExpression2
| | EndExpression1
| | Accepted: '=' (Assignment)
| | Expression
| | | Expression1
| | | | Expression2
| | | | | Expression3
| | | | | | Expression4
| | | | | | | Expression5
| | | | | | | | Expression6
| | | | | | | | | Expression7
| | | | | | | | | | Value
| | | | | | | | | | | NameReference
| | | | | | | | | | | | Accepted: 'c' (Identifier)
| | | | | | | | | | | EndNameReference
| | | | | | | | | | EndValue
| | | | | | | | | EndExpression7
| | | | | | | | EndExpression6
| | | | | | | EndExpression5
| | | | | | EndExpression4
| | | | | EndExpression3
| | | | EndExpression2
| | | EndExpression1
| | | Accepted: '=' (Assignment)
| | | Expression
| | | | Expression1
| | | | | Expression2
| | | | | | Expression3
| | | | | | | Expression4
| | | | | | | | Expression5
| | | | | | | | | Expression6
| | | | | | | | | | Expression7
| | | | | | | | | | | Value
| | | | | | | | | | | | NameReference
| | | | | | | | | | | | | Accepted: 'd' (Identifier)
| | | | | | | | | | | | EndNameReference
| | | | | | | | | | | EndValue
| | | | | | | | | | EndExpression7
| | | | | | | | | EndExpression6
| | | | | | | | EndExpression5
| | | | | | | EndExpression4
| | | | | | EndExpression3
| | | | | EndExpression2
| | | | EndExpression1
| | | EndExpression
| | EndExpression
| EndExpression
EndExpression

Parsing Successful

BinaryOperatorNode(=)
| NameReferenceNode(a)
| BinaryOperatorNode(=)
| | NameReferenceNode(b)
| | BinaryOperatorNode(=)
| | | NameReferenceNode(c)
| | | NameReferenceNode(d)
*******************************************

************** PART 1 TEST 4 **************
Token: 'a' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: 'b' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '5' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: '3' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: '9.0' of type 3 (FloatLiteral)

Expression
| Expression1
| | Expression2
| | | Expression3
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | NameReference
| | | | | | | | | | Accepted: 'a' (Identifier)
| | | | | | | | | EndNameReference
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | EndExpression3
| | EndExpression2
| EndExpression1
| Accepted: '=' (Assignment)
| Expression
| | Expression1
| | | Expression2
| | | | Expression3
| | | | | Expression4
| | | | | | Expression5
| | | | | | | Expression6
| | | | | | | | Expression7
| | | | | | | | | Value
| | | | | | | | | | NameReference
| | | | | | | | | | | Accepted: 'b' (Identifier)
| | | | | | | | | | EndNameReference
| | | | | | | | | EndValue
| | | | | | | | EndExpression7
| | | | | | | EndExpression6
| | | | | | EndExpression5
| | | | | EndExpression4
| | | | EndExpression3
| | | EndExpression2
| | EndExpression1
| | Accepted: '=' (Assignment)
| | Expression
| | | Expression1
| | | | Expression2
| | | | | Expression3
| | | | | | Expression4
| | | | | | | Expression5
| | | | | | | | Expression6
| | | | | | | | | Expression7
| | | | | | | | | | Value
| | | | | | | | | | | Literal
| | | | | | | | | | | | Accepted: '5' (IntegerLiteral)
| | | | | | | | | | | EndLiteral
| | | | | | | | | | EndValue
| | | | | | | | | EndExpression7
| | | | | | | | EndExpression6
| | | | | | | EndExpression5
| | | | | | | Accepted: '+' (Plus)
| | | | | | | Expression5
| | | | | | | | Expression6
| | | | | | | | | Expression7
| | | | | | | | | | Value
| | | | | | | | | | | Literal
| | | | | | | | | | | | Accepted: '3' (IntegerLiteral)
| | | | | | | | | | | EndLiteral
| | | | | | | | | | EndValue
| | | | | | | | | EndExpression7
| | | | | | | | EndExpression6
| | | | | | | EndExpression5
| | | | | | | Accepted: '+' (Plus)
| | | | | | | Expression5
| | | | | | | | Expression6
| | | | | | | | | Expression7
| | | | | | | | | | Value
| | | | | | | | | | | Literal
| | | | | | | | | | | | Accepted: '9.0' (FloatLiteral)
| | | | | | | | | | | EndLiteral
| | | | | | | | | | EndValue
| | | | | | | | | EndExpression7
| | | | | | | | EndExpression6
| | | | | | | EndExpression5
| | | | | | EndExpression4
| | | | | EndExpression3
| | | | EndExpression2
| | | EndExpression1
| | EndExpression
| EndExpression
EndExpression

Parsing Successful

BinaryOperatorNode(=)
| NameReferenceNode(a)
| BinaryOperatorNode(=)
| | NameReferenceNode(b)
| | BinaryOperatorNode(+)
| | | BinaryOperatorNode(+)
| | | | LiteralNode(5)
| | | | LiteralNode(3)
| | | LiteralNode(9.0)
*******************************************

************** PART 1 TEST 5 **************
Token: '5' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: '3' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '*' of type 41 (Asterisk)
Token: ' ' of type 6 (Whitespace)
Token: '9' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '-' of type 40 (Minus)
Token: ' ' of type 6 (Whitespace)
Token: '6' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '/' of type 42 (Divide)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: '2' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: '2' of type 2 (IntegerLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '||' of type 34 (LogicalOr)
Token: ' ' of type 6 (Whitespace)
Token: 'a' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '==' of type 28 (Equality)
Token: ' ' of type 6 (Whitespace)
Token: 'b' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '&&' of type 33 (LogicalAnd)
Token: ' ' of type 6 (Whitespace)
Token: 'a' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '!=' of type 29 (Inequality)
Token: ' ' of type 6 (Whitespace)
Token: '-' of type 40 (Minus)
Token: 'c' of type 1 (Identifier)

Expression
| Expression1
| | Expression2
| | | Expression3
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '5' (IntegerLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | | Accepted: '+' (Plus)
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '3' (IntegerLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | | Accepted: '*' (Asterisk)
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '9' (IntegerLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | | Accepted: '-' (Minus)
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '6' (IntegerLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | | Accepted: '/' (Divide)
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | GroupedExpression
| | | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | | Expression
| | | | | | | | | | | Expression1
| | | | | | | | | | | | Expression2
| | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | Accepted: '2' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | Accepted: '+' (Plus)
| | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | Accepted: '2' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | EndExpression2
| | | | | | | | | | | EndExpression1
| | | | | | | | | | EndExpression
| | | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | | EndGroupedExpression
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | EndExpression3
| | EndExpression2
| | Accepted: '||' (LogicalOr)
| | Expression2
| | | Expression3
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | NameReference
| | | | | | | | | | Accepted: 'a' (Identifier)
| | | | | | | | | EndNameReference
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | | Accepted: '==' (Equality)
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | NameReference
| | | | | | | | | | Accepted: 'b' (Identifier)
| | | | | | | | | EndNameReference
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | EndExpression3
| | | Accepted: '&&' (LogicalAnd)
| | | Expression3
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | NameReference
| | | | | | | | | | Accepted: 'a' (Identifier)
| | | | | | | | | EndNameReference
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | | Accepted: '!=' (Inequality)
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Accepted: '-' (Minus)
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | NameReference
| | | | | | | | | | Accepted: 'c' (Identifier)
| | | | | | | | | EndNameReference
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | EndExpression3
| | EndExpression2
| EndExpression1
EndExpression

Parsing Successful

BinaryOperatorNode(||)
| BinaryOperatorNode(-)
| | BinaryOperatorNode(+)
| | | LiteralNode(5)
| | | BinaryOperatorNode(*)
| | | | LiteralNode(3)
| | | | LiteralNode(9)
| | BinaryOperatorNode(/)
| | | LiteralNode(6)
| | | BinaryOperatorNode(+)
| | | | LiteralNode(2)
| | | | LiteralNode(2)
| BinaryOperatorNode(&&)
| | BinaryOperatorNode(==)
| | | NameReferenceNode(a)
| | | NameReferenceNode(b)
| | BinaryOperatorNode(!=)
| | | NameReferenceNode(a)
| | | UnaryOperatorNode(-)
| | | | NameReferenceNode(c)
*******************************************

************** PART 1 TEST 6 **************
Token: '!' of type 32 (LogicalNot)
Token: '--' of type 31 (Decrement)
Token: '(' of type 12 (OpenParentheses)
Token: '*' of type 41 (Asterisk)
Token: '++' of type 30 (Increment)
Token: 'a' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '-' of type 40 (Minus)
Token: ' ' of type 6 (Whitespace)
Token: '-' of type 40 (Minus)
Token: '5' of type 2 (IntegerLiteral)
Token: ')' of type 13 (CloseParentheses)

Expression
| Expression1
| | Expression2
| | | Expression3
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Accepted: '!' (LogicalNot)
| | | | | | | Accepted: '--' (Decrement)
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | GroupedExpression
| | | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | | Expression
| | | | | | | | | | | Expression1
| | | | | | | | | | | | Expression2
| | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | Accepted: '*' (Asterisk)
| | | | | | | | | | | | | | | | | Accepted: '++' (Increment)
| | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | Accepted: 'a' (Identifier)
| | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | Accepted: '-' (Minus)
| | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | Accepted: '-' (Minus)
| | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | Accepted: '5' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | EndExpression2
| | | | | | | | | | | EndExpression1
| | | | | | | | | | EndExpression
| | | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | | EndGroupedExpression
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | EndExpression3
| | EndExpression2
| EndExpression1
EndExpression

Parsing Successful

UnaryOperatorNode(!)
| UnaryOperatorNode(--)
| | BinaryOperatorNode(-)
| | | UnaryOperatorNode(*)
| | | | UnaryOperatorNode(++)
| | | | | NameReferenceNode(a)
| | | UnaryOperatorNode(-)
| | | | LiteralNode(5)
*******************************************

************** PART 1 TEST 7 **************
Token: '"what"' of type 4 (StringLiteral)
Token: '[' of type 14 (OpenBracket)
Token: '0' of type 2 (IntegerLiteral)
Token: ']' of type 15 (CloseBracket)
Token: '.' of type 21 (Dot)
Token: 'ToString' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: 'formatter' of type 1 (Identifier)
Token: ')' of type 13 (CloseParentheses)
Token: '->' of type 22 (Arrow)
Token: 'c_str' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: 'as' of type 62 (As)
Token: ' ' of type 6 (Whitespace)
Token: 'Integer' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: '5' of type 2 (IntegerLiteral)

Expression
| Expression1
| | Expression2
| | | Expression3
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '"what"' (StringLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | | Index
| | | | | | | | | Accepted: '[' (OpenBracket)
| | | | | | | | | Expression
| | | | | | | | | | Expression1
| | | | | | | | | | | Expression2
| | | | | | | | | | | | Expression3
| | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | Accepted: '0' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | EndExpression3
| | | | | | | | | | | EndExpression2
| | | | | | | | | | EndExpression1
| | | | | | | | | EndExpression
| | | | | | | | | Accepted: ']' (CloseBracket)
| | | | | | | | EndIndex
| | | | | | | | MemberAccess
| | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | Accepted: 'ToString' (Identifier)
| | | | | | | | EndMemberAccess
| | | | | | | | Call
| | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | Expression
| | | | | | | | | | Expression1
| | | | | | | | | | | Expression2
| | | | | | | | | | | | Expression3
| | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | Accepted: 'formatter' (Identifier)
| | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | EndExpression3
| | | | | | | | | | | EndExpression2
| | | | | | | | | | EndExpression1
| | | | | | | | | EndExpression
| | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | EndCall
| | | | | | | | MemberAccess
| | | | | | | | | Accepted: '->' (Arrow)
| | | | | | | | | Accepted: 'c_str' (Identifier)
| | | | | | | | EndMemberAccess
| | | | | | | | Call
| | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | EndCall
| | | | | | | | Cast
| | | | | | | | | Accepted: 'as' (As)
| | | | | | | | | Type
| | | | | | | | | | NamedType
| | | | | | | | | | | Accepted: 'Integer' (Identifier)
| | | | | | | | | | EndNamedType
| | | | | | | | | EndType
| | | | | | | | EndCast
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | | Accepted: '+' (Plus)
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '5' (IntegerLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | EndExpression3
| | EndExpression2
| EndExpression1
EndExpression

Parsing Successful

BinaryOperatorNode(+)
| CastNode
| | CallNode
| | | MemberAccessNode(->, c_str)
| | | | CallNode
| | | | | MemberAccessNode(., ToString)
| | | | | | IndexNode
| | | | | | | LiteralNode("what")
| | | | | | | LiteralNode(0)
| | | | | NameReferenceNode(formatter)
| | NamedTypeNode(Integer)
| LiteralNode(5)
*******************************************

************** PART 1 TEST 8 **************
Token: '(' of type 12 (OpenParentheses)
Token: '(' of type 12 (OpenParentheses)
Token: '99.0' of type 3 (FloatLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: '"str"' of type 4 (StringLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: '"ing"' of type 4 (StringLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: '[' of type 14 (OpenBracket)
Token: 'a' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: '++' of type 30 (Increment)
Token: 'b' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '*' of type 41 (Asterisk)
Token: ' ' of type 6 (Whitespace)
Token: '2' of type 2 (IntegerLiteral)
Token: ']' of type 15 (CloseBracket)
Token: '[' of type 14 (OpenBracket)
Token: '0' of type 2 (IntegerLiteral)
Token: ']' of type 15 (CloseBracket)
Token: ' ' of type 6 (Whitespace)
Token: 'as' of type 62 (As)
Token: ' ' of type 6 (Whitespace)
Token: 'Double' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: 'player' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Health' of type 1 (Identifier)
Token: '->' of type 22 (Arrow)
Token: 'Lives' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: 'enemy' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'GetMaxLives' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: '3' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: 'a' of type 1 (Identifier)
Token: '[' of type 14 (OpenBracket)
Token: '0' of type 2 (IntegerLiteral)
Token: ']' of type 15 (CloseBracket)
Token: ',' of type 18 (Comma)
Token: ' ' of type 6 (Whitespace)
Token: '9' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: 'as' of type 62 (As)
Token: ' ' of type 6 (Whitespace)
Token: 'Double' of type 1 (Identifier)
Token: ')' of type 13 (CloseParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '>' of type 26 (GreaterThan)
Token: ' ' of type 6 (Whitespace)
Token: '0' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '||' of type 34 (LogicalOr)
Token: ' ' of type 6 (Whitespace)
Token: 'true' of type 142 (True)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '&&' of type 33 (LogicalAnd)
Token: ' ' of type 6 (Whitespace)
Token: 'false' of type 90 (False)

Expression
| Expression1
| | Expression2
| | | Expression3
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | GroupedExpression
| | | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | | Expression
| | | | | | | | | | | Expression1
| | | | | | | | | | | | Expression2
| | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | GroupedExpression
| | | | | | | | | | | | | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '99.0' (FloatLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '+' (Plus)
| | | | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | GroupedExpression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '"str"' (StringLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '+' (Plus)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '"ing"' (StringLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndGroupedExpression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | | Index
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '[' (OpenBracket)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'a' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '+' (Plus)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '++' (Increment)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'b' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '*' (Asterisk)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '2' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: ']' (CloseBracket)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | EndIndex
| | | | | | | | | | | | | | | | | | | | | | | | | | | | Index
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '[' (OpenBracket)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '0' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: ']' (CloseBracket)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | EndIndex
| | | | | | | | | | | | | | | | | | | | | | | | | | | | Cast
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'as' (As)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Type
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | NamedType
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'Double' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndNamedType
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndType
| | | | | | | | | | | | | | | | | | | | | | | | | | | | EndCast
| | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '+' (Plus)
| | | | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'player' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'Health' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '->' (Arrow)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'Lives' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '+' (Plus)
| | | | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'enemy' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'GetMaxLives' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | | | | | | | | | | | | Call
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '3' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '+' (Plus)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'a' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Index
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '[' (OpenBracket)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '0' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: ']' (CloseBracket)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndIndex
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: ',' (Comma)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '9' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Cast
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'as' (As)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Type
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | NamedType
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'Double' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndNamedType
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndType
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndCast
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | | | | | | | | | | | | | | | | | | | | | EndCall
| | | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | | | | | | | | | | | | EndGroupedExpression
| | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | Accepted: '>' (GreaterThan)
| | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | Accepted: '0' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | Accepted: '||' (LogicalOr)
| | | | | | | | | | | | Expression2
| | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | Accepted: 'true' (True)
| | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | EndExpression2
| | | | | | | | | | | EndExpression1
| | | | | | | | | | EndExpression
| | | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | | EndGroupedExpression
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | EndExpression3
| | | Accepted: '&&' (LogicalAnd)
| | | Expression3
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: 'false' (False)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | EndExpression4
| | | EndExpression3
| | EndExpression2
| EndExpression1
EndExpression

Parsing Successful

BinaryOperatorNode(&&)
| BinaryOperatorNode(||)
| | BinaryOperatorNode(>)
| | | BinaryOperatorNode(+)
| | | | BinaryOperatorNode(+)
| | | | | BinaryOperatorNode(+)
| | | | | | LiteralNode(99.0)
| | | | | | CastNode
| | | | | | | IndexNode
| | | | | | | | IndexNode
| | | | | | | | | BinaryOperatorNode(+)
| | | | | | | | | | LiteralNode("str")
| | | | | | | | | | LiteralNode("ing")
| | | | | | | | | BinaryOperatorNode(+)
| | | | | | | | | | NameReferenceNode(a)
| | | | | | | | | | BinaryOperatorNode(*)
| | | | | | | | | | | UnaryOperatorNode(++)
| | | | | | | | | | | | NameReferenceNode(b)
| | | | | | | | | | | LiteralNode(2)
| | | | | | | | LiteralNode(0)
| | | | | | | NamedTypeNode(Double)
| | | | | MemberAccessNode(->, Lives)
| | | | | | MemberAccessNode(., Health)
| | | | | | | NameReferenceNode(player)
| | | | CallNode
| | | | | MemberAccessNode(., GetMaxLives)
| | | | | | NameReferenceNode(enemy)
| | | | | BinaryOperatorNode(+)
| | | | | | LiteralNode(3)
| | | | | | IndexNode
| | | | | | | NameReferenceNode(a)
| | | | | | | LiteralNode(0)
| | | | | CastNode
| | | | | | LiteralNode(9)
| | | | | | NamedTypeNode(Double)
| | | LiteralNode(0)
| | LiteralNode(true)
| LiteralNode(false)
*******************************************

************** PART 2 TEST 9 **************

Block
EndBlock

Parsing Successful

BlockNode
*******************************************

************** PART 2 TEST 10 **************
Token: 'function' of type 96 (Function)
Token: ' ' of type 6 (Whitespace)
Token: 'Print' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: 'value' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'String' of type 1 (Identifier)
Token: '*' of type 41 (Asterisk)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)

Block
| Function
| | Accepted: 'function' (Function)
| | Accepted: 'Print' (Identifier)
| | Accepted: '(' (OpenParentheses)
| | Parameter
| | | Accepted: 'value' (Identifier)
| | | SpecifiedType
| | | | Accepted: ':' (Colon)
| | | | Type
| | | | | NamedType
| | | | | | Accepted: 'String' (Identifier)
| | | | | | Accepted: '*' (Asterisk)
| | | | | EndNamedType
| | | | EndType
| | | EndSpecifiedType
| | EndParameter
| | Accepted: ')' (CloseParentheses)
| | Scope
| | | Accepted: '{' (OpenCurley)
| | | Accepted: '}' (CloseCurley)
| | EndScope
| EndFunction
EndBlock

Parsing Successful

BlockNode
| FunctionNode(Print)
| | ParameterNode(value)
| | | PointerTypeNode
| | | | NamedTypeNode(String)
| | ScopeNode
*******************************************

************** PART 2 TEST 11 **************
Token: 'class' of type 70 (Class)
Token: ' ' of type 6 (Whitespace)
Token: 'Player' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)

Block
| Class
| | Accepted: 'class' (Class)
| | Accepted: 'Player' (Identifier)
| | Accepted: '{' (OpenCurley)
| | Accepted: '}' (CloseCurley)
| EndClass
EndBlock

Parsing Successful

BlockNode
| ClassNode(Player)
*******************************************

************** PART 2 TEST 12 **************
Token: 'function' of type 96 (Function)
Token: ' ' of type 6 (Whitespace)
Token: 'DoSomething' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: 'while' of type 155 (While)
Token: '(' of type 12 (OpenParentheses)
Token: 'true' of type 142 (True)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)

Block
| Function
| | Accepted: 'function' (Function)
| | Accepted: 'DoSomething' (Identifier)
| | Accepted: '(' (OpenParentheses)
| | Accepted: ')' (CloseParentheses)
| | Scope
| | | Accepted: '{' (OpenCurley)
| | | Statement
| | | | FreeStatement
| | | | | While
| | | | | | Accepted: 'while' (While)
| | | | | | GroupedExpression
| | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | Expression
| | | | | | | | Expression1
| | | | | | | | | Expression2
| | | | | | | | | | Expression3
| | | | | | | | | | | Expression4
| | | | | | | | | | | | Expression5
| | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | Accepted: 'true' (True)
| | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | EndExpression5
| | | | | | | | | | | EndExpression4
| | | | | | | | | | EndExpression3
| | | | | | | | | EndExpression2
| | | | | | | | EndExpression1
| | | | | | | EndExpression
| | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | EndGroupedExpression
| | | | | | Scope
| | | | | | | Accepted: '{' (OpenCurley)
| | | | | | | Accepted: '}' (CloseCurley)
| | | | | | EndScope
| | | | | EndWhile
| | | | EndFreeStatement
| | | EndStatement
| | | Accepted: '}' (CloseCurley)
| | EndScope
| EndFunction
EndBlock

Parsing Successful

BlockNode
| FunctionNode(DoSomething)
| | ScopeNode
| | | WhileNode
| | | | LiteralNode(true)
| | | | ScopeNode
*******************************************

************** PART 2 TEST 13 **************
Token: 'function' of type 96 (Function)
Token: ' ' of type 6 (Whitespace)
Token: 'DoSomething' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: 'for' of type 93 (For)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: 'var' of type 152 (Var)
Token: ' ' of type 6 (Whitespace)
Token: 'i' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'Integer' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '0' of type 2 (IntegerLiteral)
Token: ';' of type 16 (Semicolon)
Token: ' ' of type 6 (Whitespace)
Token: 'i' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '<' of type 24 (LessThan)
Token: ' ' of type 6 (Whitespace)
Token: '100' of type 2 (IntegerLiteral)
Token: ';' of type 16 (Semicolon)
Token: ' ' of type 6 (Whitespace)
Token: '++' of type 30 (Increment)
Token: 'i' of type 1 (Identifier)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: 'Print' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: '"hello world"' of type 4 (StringLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: ';' of type 16 (Semicolon)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)

Block
| Function
| | Accepted: 'function' (Function)
| | Accepted: 'DoSomething' (Identifier)
| | Accepted: '(' (OpenParentheses)
| | Accepted: ')' (CloseParentheses)
| | Scope
| | | Accepted: '{' (OpenCurley)
| | | Statement
| | | | FreeStatement
| | | | | For
| | | | | | Accepted: 'for' (For)
| | | | | | Accepted: '(' (OpenParentheses)
| | | | | | Var
| | | | | | | Accepted: 'var' (Var)
| | | | | | | Accepted: 'i' (Identifier)
| | | | | | | SpecifiedType
| | | | | | | | Accepted: ':' (Colon)
| | | | | | | | Type
| | | | | | | | | NamedType
| | | | | | | | | | Accepted: 'Integer' (Identifier)
| | | | | | | | | EndNamedType
| | | | | | | | EndType
| | | | | | | EndSpecifiedType
| | | | | | | Accepted: '=' (Assignment)
| | | | | | | Expression
| | | | | | | | Expression1
| | | | | | | | | Expression2
| | | | | | | | | | Expression3
| | | | | | | | | | | Expression4
| | | | | | | | | | | | Expression5
| | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | Accepted: '0' (IntegerLiteral)
| | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | EndExpression5
| | | | | | | | | | | EndExpression4
| | | | | | | | | | EndExpression3
| | | | | | | | | EndExpression2
| | | | | | | | EndExpression1
| | | | | | | EndExpression
| | | | | | EndVar
| | | | | | Accepted: ';' (Semicolon)
| | | | | | Expression
| | | | | | | Expression1
| | | | | | | | Expression2
| | | | | | | | | Expression3
| | | | | | | | | | Expression4
| | | | | | | | | | | Expression5
| | | | | | | | | | | | Expression6
| | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | Accepted: 'i' (Identifier)
| | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | EndExpression6
| | | | | | | | | | | EndExpression5
| | | | | | | | | | EndExpression4
| | | | | | | | | | Accepted: '<' (LessThan)
| | | | | | | | | | Expression4
| | | | | | | | | | | Expression5
| | | | | | | | | | | | Expression6
| | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | Accepted: '100' (IntegerLiteral)
| | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | EndExpression6
| | | | | | | | | | | EndExpression5
| | | | | | | | | | EndExpression4
| | | | | | | | | EndExpression3
| | | | | | | | EndExpression2
| | | | | | | EndExpression1
| | | | | | EndExpression
| | | | | | Accepted: ';' (Semicolon)
| | | | | | Expression
| | | | | | | Expression1
| | | | | | | | Expression2
| | | | | | | | | Expression3
| | | | | | | | | | Expression4
| | | | | | | | | | | Expression5
| | | | | | | | | | | | Expression6
| | | | | | | | | | | | | Accepted: '++' (Increment)
| | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | Accepted: 'i' (Identifier)
| | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | EndExpression6
| | | | | | | | | | | EndExpression5
| | | | | | | | | | EndExpression4
| | | | | | | | | EndExpression3
| | | | | | | | EndExpression2
| | | | | | | EndExpression1
| | | | | | EndExpression
| | | | | | Accepted: ')' (CloseParentheses)
| | | | | | Scope
| | | | | | | Accepted: '{' (OpenCurley)
| | | | | | | Statement
| | | | | | | | DelimitedStatement
| | | | | | | | | Expression
| | | | | | | | | | Expression1
| | | | | | | | | | | Expression2
| | | | | | | | | | | | Expression3
| | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | Accepted: 'Print' (Identifier)
| | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | Call
| | | | | | | | | | | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '"hello world"' (StringLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | | | | | | | | | | EndCall
| | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | EndExpression3
| | | | | | | | | | | EndExpression2
| | | | | | | | | | EndExpression1
| | | | | | | | | EndExpression
| | | | | | | | EndDelimitedStatement
| | | | | | | | Accepted: ';' (Semicolon)
| | | | | | | EndStatement
| | | | | | | Accepted: '}' (CloseCurley)
| | | | | | EndScope
| | | | | EndFor
| | | | EndFreeStatement
| | | EndStatement
| | | Accepted: '}' (CloseCurley)
| | EndScope
| EndFunction
EndBlock

Parsing Successful

BlockNode
| FunctionNode(DoSomething)
| | ScopeNode
| | | ForNode
| | | | VariableNode(i)
| | | | | NamedTypeNode(Integer)
| | | | | LiteralNode(0)
| | | | BinaryOperatorNode(<)
| | | | | NameReferenceNode(i)
| | | | | LiteralNode(100)
| | | | ScopeNode
| | | | | CallNode
| | | | | | NameReferenceNode(Print)
| | | | | | LiteralNode("hello world")
| | | | UnaryOperatorNode(++)
| | | | | NameReferenceNode(i)
*******************************************

************** PART 2 TEST 14 **************
Token: 'function' of type 96 (Function)
Token: ' ' of type 6 (Whitespace)
Token: 'DoSomething' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: 'var' of type 152 (Var)
Token: ' ' of type 6 (Whitespace)
Token: 'a' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'Integer' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '10' of type 2 (IntegerLiteral)
Token: ';' of type 16 (Semicolon)
Token: ' ' of type 6 (Whitespace)
Token: 'if' of type 100 (If)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: 'a' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '>' of type 26 (GreaterThan)
Token: ' ' of type 6 (Whitespace)
Token: '5' of type 2 (IntegerLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)

Block
| Function
| | Accepted: 'function' (Function)
| | Accepted: 'DoSomething' (Identifier)
| | Accepted: '(' (OpenParentheses)
| | Accepted: ')' (CloseParentheses)
| | Scope
| | | Accepted: '{' (OpenCurley)
| | | Statement
| | | | DelimitedStatement
| | | | | Var
| | | | | | Accepted: 'var' (Var)
| | | | | | Accepted: 'a' (Identifier)
| | | | | | SpecifiedType
| | | | | | | Accepted: ':' (Colon)
| | | | | | | Type
| | | | | | | | NamedType
| | | | | | | | | Accepted: 'Integer' (Identifier)
| | | | | | | | EndNamedType
| | | | | | | EndType
| | | | | | EndSpecifiedType
| | | | | | Accepted: '=' (Assignment)
| | | | | | Expression
| | | | | | | Expression1
| | | | | | | | Expression2
| | | | | | | | | Expression3
| | | | | | | | | | Expression4
| | | | | | | | | | | Expression5
| | | | | | | | | | | | Expression6
| | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | Accepted: '10' (IntegerLiteral)
| | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | EndExpression6
| | | | | | | | | | | EndExpression5
| | | | | | | | | | EndExpression4
| | | | | | | | | EndExpression3
| | | | | | | | EndExpression2
| | | | | | | EndExpression1
| | | | | | EndExpression
| | | | | EndVar
| | | | EndDelimitedStatement
| | | | Accepted: ';' (Semicolon)
| | | EndStatement
| | | Statement
| | | | FreeStatement
| | | | | If
| | | | | | Accepted: 'if' (If)
| | | | | | GroupedExpression
| | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | Expression
| | | | | | | | Expression1
| | | | | | | | | Expression2
| | | | | | | | | | Expression3
| | | | | | | | | | | Expression4
| | | | | | | | | | | | Expression5
| | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | Accepted: 'a' (Identifier)
| | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | EndExpression5
| | | | | | | | | | | EndExpression4
| | | | | | | | | | | Accepted: '>' (GreaterThan)
| | | | | | | | | | | Expression4
| | | | | | | | | | | | Expression5
| | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | Accepted: '5' (IntegerLiteral)
| | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | EndExpression5
| | | | | | | | | | | EndExpression4
| | | | | | | | | | EndExpression3
| | | | | | | | | EndExpression2
| | | | | | | | EndExpression1
| | | | | | | EndExpression
| | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | EndGroupedExpression
| | | | | | Scope
| | | | | | | Accepted: '{' (OpenCurley)
| | | | | | | Accepted: '}' (CloseCurley)
| | | | | | EndScope
| | | | | EndIf
| | | | EndFreeStatement
| | | EndStatement
| | | Accepted: '}' (CloseCurley)
| | EndScope
| EndFunction
EndBlock

Parsing Successful

BlockNode
| FunctionNode(DoSomething)
| | ScopeNode
| | | VariableNode(a)
| | | | NamedTypeNode(Integer)
| | | | LiteralNode(10)
| | | IfNode
| | | | BinaryOperatorNode(>)
| | | | | NameReferenceNode(a)
| | | | | LiteralNode(5)
| | | | ScopeNode
*******************************************

************** PART 2 TEST 15 **************
Token: 'function' of type 96 (Function)
Token: ' ' of type 6 (Whitespace)
Token: 'DoSomething' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: 'var' of type 152 (Var)
Token: ' ' of type 6 (Whitespace)
Token: 'b' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'Integer' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '20' of type 2 (IntegerLiteral)
Token: ';' of type 16 (Semicolon)
Token: ' ' of type 6 (Whitespace)
Token: 'if' of type 100 (If)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: 'b' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '==' of type 28 (Equality)
Token: ' ' of type 6 (Whitespace)
Token: '10' of type 2 (IntegerLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: ' ' of type 6 (Whitespace)
Token: 'else' of type 84 (Else)
Token: ' ' of type 6 (Whitespace)
Token: 'if' of type 100 (If)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: 'b' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '==' of type 28 (Equality)
Token: ' ' of type 6 (Whitespace)
Token: '20' of type 2 (IntegerLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: ' ' of type 6 (Whitespace)
Token: 'else' of type 84 (Else)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)

Block
| Function
| | Accepted: 'function' (Function)
| | Accepted: 'DoSomething' (Identifier)
| | Accepted: '(' (OpenParentheses)
| | Accepted: ')' (CloseParentheses)
| | Scope
| | | Accepted: '{' (OpenCurley)
| | | Statement
| | | | DelimitedStatement
| | | | | Var
| | | | | | Accepted: 'var' (Var)
| | | | | | Accepted: 'b' (Identifier)
| | | | | | SpecifiedType
| | | | | | | Accepted: ':' (Colon)
| | | | | | | Type
| | | | | | | | NamedType
| | | | | | | | | Accepted: 'Integer' (Identifier)
| | | | | | | | EndNamedType
| | | | | | | EndType
| | | | | | EndSpecifiedType
| | | | | | Accepted: '=' (Assignment)
| | | | | | Expression
| | | | | | | Expression1
| | | | | | | | Expression2
| | | | | | | | | Expression3
| | | | | | | | | | Expression4
| | | | | | | | | | | Expression5
| | | | | | | | | | | | Expression6
| | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | Accepted: '20' (IntegerLiteral)
| | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | EndExpression6
| | | | | | | | | | | EndExpression5
| | | | | | | | | | EndExpression4
| | | | | | | | | EndExpression3
| | | | | | | | EndExpression2
| | | | | | | EndExpression1
| | | | | | EndExpression
| | | | | EndVar
| | | | EndDelimitedStatement
| | | | Accepted: ';' (Semicolon)
| | | EndStatement
| | | Statement
| | | | FreeStatement
| | | | | If
| | | | | | Accepted: 'if' (If)
| | | | | | GroupedExpression
| | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | Expression
| | | | | | | | Expression1
| | | | | | | | | Expression2
| | | | | | | | | | Expression3
| | | | | | | | | | | Expression4
| | | | | | | | | | | | Expression5
| | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | Accepted: 'b' (Identifier)
| | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | EndExpression5
| | | | | | | | | | | EndExpression4
| | | | | | | | | | | Accepted: '==' (Equality)
| | | | | | | | | | | Expression4
| | | | | | | | | | | | Expression5
| | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | Accepted: '10' (IntegerLiteral)
| | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | EndExpression5
| | | | | | | | | | | EndExpression4
| | | | | | | | | | EndExpression3
| | | | | | | | | EndExpression2
| | | | | | | | EndExpression1
| | | | | | | EndExpression
| | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | EndGroupedExpression
| | | | | | Scope
| | | | | | | Accepted: '{' (OpenCurley)
| | | | | | | Accepted: '}' (CloseCurley)
| | | | | | EndScope
| | | | | | Else
| | | | | | | Accepted: 'else' (Else)
| | | | | | | If
| | | | | | | | Accepted: 'if' (If)
| | | | | | | | GroupedExpression
| | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | Expression
| | | | | | | | | | Expression1
| | | | | | | | | | | Expression2
| | | | | | | | | | | | Expression3
| | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | Accepted: 'b' (Identifier)
| | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | Accepted: '==' (Equality)
| | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | Accepted: '20' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | EndExpression3
| | | | | | | | | | | EndExpression2
| | | | | | | | | | EndExpression1
| | | | | | | | | EndExpression
| | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | EndGroupedExpression
| | | | | | | | Scope
| | | | | | | | | Accepted: '{' (OpenCurley)
| | | | | | | | | Accepted: '}' (CloseCurley)
| | | | | | | | EndScope
| | | | | | | | Else
| | | | | | | | | Accepted: 'else' (Else)
| | | | | | | | | Scope
| | | | | | | | | | Accepted: '{' (OpenCurley)
| | | | | | | | | | Accepted: '}' (CloseCurley)
| | | | | | | | | EndScope
| | | | | | | | EndElse
| | | | | | | EndIf
| | | | | | EndElse
| | | | | EndIf
| | | | EndFreeStatement
| | | EndStatement
| | | Accepted: '}' (CloseCurley)
| | EndScope
| EndFunction
EndBlock

Parsing Successful

BlockNode
| FunctionNode(DoSomething)
| | ScopeNode
| | | VariableNode(b)
| | | | NamedTypeNode(Integer)
| | | | LiteralNode(20)
| | | IfNode
| | | | BinaryOperatorNode(==)
| | | | | NameReferenceNode(b)
| | | | | LiteralNode(10)
| | | | ScopeNode
| | | | IfNode
| | | | | BinaryOperatorNode(==)
| | | | | | NameReferenceNode(b)
| | | | | | LiteralNode(20)
| | | | | ScopeNode
| | | | | IfNode
| | | | | | ScopeNode
*******************************************

************** PART 2 TEST 16 **************
Token: 'class' of type 70 (Class)
Token: ' ' of type 6 (Whitespace)
Token: 'Player' of type 1 (Identifier)
Token: '\n' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n  ' of type 6 (Whitespace)
Token: 'var' of type 152 (Var)
Token: ' ' of type 6 (Whitespace)
Token: 'Lives' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'Integer' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '9' of type 2 (IntegerLiteral)
Token: ';' of type 16 (Semicolon)
Token: '\n  ' of type 6 (Whitespace)
Token: 'var' of type 152 (Var)
Token: ' ' of type 6 (Whitespace)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'Float' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '100.0f' of type 3 (FloatLiteral)
Token: ';' of type 16 (Semicolon)
Token: '\n  ' of type 6 (Whitespace)
Token: 'var' of type 152 (Var)
Token: ' ' of type 6 (Whitespace)
Token: 'DamageCallback' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'function' of type 96 (Function)
Token: '*' of type 41 (Asterisk)
Token: '(' of type 12 (OpenParentheses)
Token: 'Integer' of type 1 (Identifier)
Token: '&' of type 36 (Ampersand)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'Boolean' of type 1 (Identifier)
Token: ';' of type 16 (Semicolon)
Token: '\n  ' of type 6 (Whitespace)
Token: 'function' of type 96 (Function)
Token: ' ' of type 6 (Whitespace)
Token: 'ApplyDamage' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: 'amount' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'Float' of type 1 (Identifier)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'Void' of type 1 (Identifier)
Token: '\n  ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n    ' of type 6 (Whitespace)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '-=' of type 47 (AssignmentMinus)
Token: ' ' of type 6 (Whitespace)
Token: 'amount' of type 1 (Identifier)
Token: ';' of type 16 (Semicolon)
Token: '\n    ' of type 6 (Whitespace)
Token: 'if' of type 100 (If)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '<=' of type 25 (LessThanOrEqualTo)
Token: ' ' of type 6 (Whitespace)
Token: '0.0f' of type 3 (FloatLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: '\n    ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n      ' of type 6 (Whitespace)
Token: '--' of type 31 (Decrement)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Lives' of type 1 (Identifier)
Token: ';' of type 16 (Semicolon)
Token: '\n      ' of type 6 (Whitespace)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '100.0f' of type 3 (FloatLiteral)
Token: ';' of type 16 (Semicolon)
Token: '\n      ' of type 6 (Whitespace)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'SendDeathEvent' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: ';' of type 16 (Semicolon)
Token: '\n    ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n  ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n  ' of type 6 (Whitespace)
Token: 'function' of type 96 (Function)
Token: ' ' of type 6 (Whitespace)
Token: 'SendDeathEvent' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: '\n  ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n    ' of type 6 (Whitespace)
Token: '// Not implemented yet\n' of type 7 (SingleLineComment)
Token: '  ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n' of type 6 (Whitespace)

Block
| Class
| | Accepted: 'class' (Class)
| | Accepted: 'Player' (Identifier)
| | Accepted: '{' (OpenCurley)
| | Var
| | | Accepted: 'var' (Var)
| | | Accepted: 'Lives' (Identifier)
| | | SpecifiedType
| | | | Accepted: ':' (Colon)
| | | | Type
| | | | | NamedType
| | | | | | Accepted: 'Integer' (Identifier)
| | | | | EndNamedType
| | | | EndType
| | | EndSpecifiedType
| | | Accepted: '=' (Assignment)
| | | Expression
| | | | Expression1
| | | | | Expression2
| | | | | | Expression3
| | | | | | | Expression4
| | | | | | | | Expression5
| | | | | | | | | Expression6
| | | | | | | | | | Expression7
| | | | | | | | | | | Value
| | | | | | | | | | | | Literal
| | | | | | | | | | | | | Accepted: '9' (IntegerLiteral)
| | | | | | | | | | | | EndLiteral
| | | | | | | | | | | EndValue
| | | | | | | | | | EndExpression7
| | | | | | | | | EndExpression6
| | | | | | | | EndExpression5
| | | | | | | EndExpression4
| | | | | | EndExpression3
| | | | | EndExpression2
| | | | EndExpression1
| | | EndExpression
| | EndVar
| | Accepted: ';' (Semicolon)
| | Var
| | | Accepted: 'var' (Var)
| | | Accepted: 'Health' (Identifier)
| | | SpecifiedType
| | | | Accepted: ':' (Colon)
| | | | Type
| | | | | NamedType
| | | | | | Accepted: 'Float' (Identifier)
| | | | | EndNamedType
| | | | EndType
| | | EndSpecifiedType
| | | Accepted: '=' (Assignment)
| | | Expression
| | | | Expression1
| | | | | Expression2
| | | | | | Expression3
| | | | | | | Expression4
| | | | | | | | Expression5
| | | | | | | | | Expression6
| | | | | | | | | | Expression7
| | | | | | | | | | | Value
| | | | | | | | | | | | Literal
| | | | | | | | | | | | | Accepted: '100.0f' (FloatLiteral)
| | | | | | | | | | | | EndLiteral
| | | | | | | | | | | EndValue
| | | | | | | | | | EndExpression7
| | | | | | | | | EndExpression6
| | | | | | | | EndExpression5
| | | | | | | EndExpression4
| | | | | | EndExpression3
| | | | | EndExpression2
| | | | EndExpression1
| | | EndExpression
| | EndVar
| | Accepted: ';' (Semicolon)
| | Var
| | | Accepted: 'var' (Var)
| | | Accepted: 'DamageCallback' (Identifier)
| | | SpecifiedType
| | | | Accepted: ':' (Colon)
| | | | Type
| | | | | FunctionType
| | | | | | Accepted: 'function' (Function)
| | | | | | Accepted: '*' (Asterisk)
| | | | | | Accepted: '(' (OpenParentheses)
| | | | | | Type
| | | | | | | NamedType
| | | | | | | | Accepted: 'Integer' (Identifier)
| | | | | | | | Accepted: '&' (Ampersand)
| | | | | | | EndNamedType
| | | | | | EndType
| | | | | | Accepted: ')' (CloseParentheses)
| | | | | | SpecifiedType
| | | | | | | Accepted: ':' (Colon)
| | | | | | | Type
| | | | | | | | NamedType
| | | | | | | | | Accepted: 'Boolean' (Identifier)
| | | | | | | | EndNamedType
| | | | | | | EndType
| | | | | | EndSpecifiedType
| | | | | EndFunctionType
| | | | EndType
| | | EndSpecifiedType
| | EndVar
| | Accepted: ';' (Semicolon)
| | Function
| | | Accepted: 'function' (Function)
| | | Accepted: 'ApplyDamage' (Identifier)
| | | Accepted: '(' (OpenParentheses)
| | | Parameter
| | | | Accepted: 'amount' (Identifier)
| | | | SpecifiedType
| | | | | Accepted: ':' (Colon)
| | | | | Type
| | | | | | NamedType
| | | | | | | Accepted: 'Float' (Identifier)
| | | | | | EndNamedType
| | | | | EndType
| | | | EndSpecifiedType
| | | EndParameter
| | | Accepted: ')' (CloseParentheses)
| | | SpecifiedType
| | | | Accepted: ':' (Colon)
| | | | Type
| | | | | NamedType
| | | | | | Accepted: 'Void' (Identifier)
| | | | | EndNamedType
| | | | EndType
| | | EndSpecifiedType
| | | Scope
| | | | Accepted: '{' (OpenCurley)
| | | | Statement
| | | | | DelimitedStatement
| | | | | | Expression
| | | | | | | Expression1
| | | | | | | | Expression2
| | | | | | | | | Expression3
| | | | | | | | | | Expression4
| | | | | | | | | | | Expression5
| | | | | | | | | | | | Expression6
| | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | Accepted: 'Health' (Identifier)
| | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | EndExpression6
| | | | | | | | | | | EndExpression5
| | | | | | | | | | EndExpression4
| | | | | | | | | EndExpression3
| | | | | | | | EndExpression2
| | | | | | | EndExpression1
| | | | | | | Accepted: '-=' (AssignmentMinus)
| | | | | | | Expression
| | | | | | | | Expression1
| | | | | | | | | Expression2
| | | | | | | | | | Expression3
| | | | | | | | | | | Expression4
| | | | | | | | | | | | Expression5
| | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | Accepted: 'amount' (Identifier)
| | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | EndExpression5
| | | | | | | | | | | EndExpression4
| | | | | | | | | | EndExpression3
| | | | | | | | | EndExpression2
| | | | | | | | EndExpression1
| | | | | | | EndExpression
| | | | | | EndExpression
| | | | | EndDelimitedStatement
| | | | | Accepted: ';' (Semicolon)
| | | | EndStatement
| | | | Statement
| | | | | FreeStatement
| | | | | | If
| | | | | | | Accepted: 'if' (If)
| | | | | | | GroupedExpression
| | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | Expression
| | | | | | | | | Expression1
| | | | | | | | | | Expression2
| | | | | | | | | | | Expression3
| | | | | | | | | | | | Expression4
| | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | Accepted: 'Health' (Identifier)
| | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | Accepted: '<=' (LessThanOrEqualTo)
| | | | | | | | | | | | Expression4
| | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | Accepted: '0.0f' (FloatLiteral)
| | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | EndExpression4
| | | | | | | | | | | EndExpression3
| | | | | | | | | | EndExpression2
| | | | | | | | | EndExpression1
| | | | | | | | EndExpression
| | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | EndGroupedExpression
| | | | | | | Scope
| | | | | | | | Accepted: '{' (OpenCurley)
| | | | | | | | Statement
| | | | | | | | | DelimitedStatement
| | | | | | | | | | Expression
| | | | | | | | | | | Expression1
| | | | | | | | | | | | Expression2
| | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | Accepted: '--' (Decrement)
| | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | | | Accepted: 'Lives' (Identifier)
| | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | EndExpression2
| | | | | | | | | | | EndExpression1
| | | | | | | | | | EndExpression
| | | | | | | | | EndDelimitedStatement
| | | | | | | | | Accepted: ';' (Semicolon)
| | | | | | | | EndStatement
| | | | | | | | Statement
| | | | | | | | | DelimitedStatement
| | | | | | | | | | Expression
| | | | | | | | | | | Expression1
| | | | | | | | | | | | Expression2
| | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | | | Accepted: 'Health' (Identifier)
| | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | EndExpression2
| | | | | | | | | | | EndExpression1
| | | | | | | | | | | Accepted: '=' (Assignment)
| | | | | | | | | | | Expression
| | | | | | | | | | | | Expression1
| | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | Accepted: '100.0f' (FloatLiteral)
| | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | EndExpression1
| | | | | | | | | | | EndExpression
| | | | | | | | | | EndExpression
| | | | | | | | | EndDelimitedStatement
| | | | | | | | | Accepted: ';' (Semicolon)
| | | | | | | | EndStatement
| | | | | | | | Statement
| | | | | | | | | DelimitedStatement
| | | | | | | | | | Expression
| | | | | | | | | | | Expression1
| | | | | | | | | | | | Expression2
| | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | | | Accepted: 'SendDeathEvent' (Identifier)
| | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | | Call
| | | | | | | | | | | | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | | | | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | | | | | | | | | | | EndCall
| | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | EndExpression2
| | | | | | | | | | | EndExpression1
| | | | | | | | | | EndExpression
| | | | | | | | | EndDelimitedStatement
| | | | | | | | | Accepted: ';' (Semicolon)
| | | | | | | | EndStatement
| | | | | | | | Accepted: '}' (CloseCurley)
| | | | | | | EndScope
| | | | | | EndIf
| | | | | EndFreeStatement
| | | | EndStatement
| | | | Accepted: '}' (CloseCurley)
| | | EndScope
| | EndFunction
| | Function
| | | Accepted: 'function' (Function)
| | | Accepted: 'SendDeathEvent' (Identifier)
| | | Accepted: '(' (OpenParentheses)
| | | Accepted: ')' (CloseParentheses)
| | | Scope
| | | | Accepted: '{' (OpenCurley)
| | | | Accepted: '}' (CloseCurley)
| | | EndScope
| | EndFunction
| | Accepted: '}' (CloseCurley)
| EndClass
EndBlock

Parsing Successful

BlockNode
| ClassNode(Player)
| | VariableNode(Lives)
| | | NamedTypeNode(Integer)
| | | LiteralNode(9)
| | VariableNode(Health)
| | | NamedTypeNode(Float)
| | | LiteralNode(100.0f)
| | VariableNode(DamageCallback)
| | | PointerTypeNode
| | | | FunctionTypeNode
| | | | | ReferenceTypeNode
| | | | | | NamedTypeNode(Integer)
| | | | | NamedTypeNode(Boolean)
| | FunctionNode(ApplyDamage)
| | | ParameterNode(amount)
| | | | NamedTypeNode(Float)
| | | NamedTypeNode(Void)
| | | ScopeNode
| | | | BinaryOperatorNode(-=)
| | | | | MemberAccessNode(., Health)
| | | | | | NameReferenceNode(this)
| | | | | NameReferenceNode(amount)
| | | | IfNode
| | | | | BinaryOperatorNode(<=)
| | | | | | MemberAccessNode(., Health)
| | | | | | | NameReferenceNode(this)
| | | | | | LiteralNode(0.0f)
| | | | | ScopeNode
| | | | | | UnaryOperatorNode(--)
| | | | | | | MemberAccessNode(., Lives)
| | | | | | | | NameReferenceNode(this)
| | | | | | BinaryOperatorNode(=)
| | | | | | | MemberAccessNode(., Health)
| | | | | | | | NameReferenceNode(this)
| | | | | | | LiteralNode(100.0f)
| | | | | | CallNode
| | | | | | | MemberAccessNode(., SendDeathEvent)
| | | | | | | | NameReferenceNode(this)
| | FunctionNode(SendDeathEvent)
| | | ScopeNode
*******************************************

************** PART 2 TEST 17 **************
Token: 'class' of type 70 (Class)
Token: ' ' of type 6 (Whitespace)
Token: 'Player' of type 1 (Identifier)
Token: '\n' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n  ' of type 6 (Whitespace)
Token: 'var' of type 152 (Var)
Token: ' ' of type 6 (Whitespace)
Token: 'Lives' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'Integer' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '9' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '*' of type 41 (Asterisk)
Token: ' ' of type 6 (Whitespace)
Token: '1' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: '0' of type 2 (IntegerLiteral)
Token: ';' of type 16 (Semicolon)
Token: '\n  ' of type 6 (Whitespace)
Token: 'var' of type 152 (Var)
Token: ' ' of type 6 (Whitespace)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'Float' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '100.0f' of type 3 (FloatLiteral)
Token: ';' of type 16 (Semicolon)
Token: '\n  ' of type 6 (Whitespace)
Token: 'function' of type 96 (Function)
Token: ' ' of type 6 (Whitespace)
Token: 'ApplyDamage' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: 'amount' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'Float' of type 1 (Identifier)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'Boolean' of type 1 (Identifier)
Token: '\n  ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n    ' of type 6 (Whitespace)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '-=' of type 47 (AssignmentMinus)
Token: ' ' of type 6 (Whitespace)
Token: 'amount' of type 1 (Identifier)
Token: ';' of type 16 (Semicolon)
Token: '\n    ' of type 6 (Whitespace)
Token: 'if' of type 100 (If)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '<=' of type 25 (LessThanOrEqualTo)
Token: ' ' of type 6 (Whitespace)
Token: '0.0f' of type 3 (FloatLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: '\n    ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n      ' of type 6 (Whitespace)
Token: '--' of type 31 (Decrement)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Lives' of type 1 (Identifier)
Token: ';' of type 16 (Semicolon)
Token: '\n      ' of type 6 (Whitespace)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '100.0f' of type 3 (FloatLiteral)
Token: ';' of type 16 (Semicolon)
Token: '\n      ' of type 6 (Whitespace)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'SendDeathEvent' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: ';' of type 16 (Semicolon)
Token: '\n      ' of type 6 (Whitespace)
Token: 'goto' of type 99 (Goto)
Token: ' ' of type 6 (Whitespace)
Token: 'End' of type 1 (Identifier)
Token: ';' of type 16 (Semicolon)
Token: '\n    ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n    ' of type 6 (Whitespace)
Token: 'else' of type 84 (Else)
Token: '\n    ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n      ' of type 6 (Whitespace)
Token: 'while' of type 155 (While)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '<' of type 24 (LessThan)
Token: ' ' of type 6 (Whitespace)
Token: '50.0f' of type 3 (FloatLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: '\n      ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n        ' of type 6 (Whitespace)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '+=' of type 46 (AssignmentPlus)
Token: ' ' of type 6 (Whitespace)
Token: '1.0f' of type 3 (FloatLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '*' of type 41 (Asterisk)
Token: ' ' of type 6 (Whitespace)
Token: '2' of type 2 (IntegerLiteral)
Token: ';' of type 16 (Semicolon)
Token: '\n        ' of type 6 (Whitespace)
Token: 'if' of type 100 (If)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: 'as' of type 62 (As)
Token: ' ' of type 6 (Whitespace)
Token: 'Integer' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '%' of type 43 (Modulo)
Token: ' ' of type 6 (Whitespace)
Token: '2' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '==' of type 28 (Equality)
Token: ' ' of type 6 (Whitespace)
Token: '0' of type 2 (IntegerLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: '\n        ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n          ' of type 6 (Whitespace)
Token: 'continue' of type 76 (Continue)
Token: ';' of type 16 (Semicolon)
Token: '\n        ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n        ' of type 6 (Whitespace)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '*=' of type 48 (AssignmentMultiply)
Token: ' ' of type 6 (Whitespace)
Token: '1.1f' of type 3 (FloatLiteral)
Token: ';' of type 16 (Semicolon)
Token: '        ' of type 6 (Whitespace)
Token: 'if' of type 100 (If)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: 'this' of type 1 (Identifier)
Token: '.' of type 21 (Dot)
Token: 'Health' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '>' of type 26 (GreaterThan)
Token: ' ' of type 6 (Whitespace)
Token: '30.0f' of type 3 (FloatLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: '\n        ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n          ' of type 6 (Whitespace)
Token: 'break' of type 66 (Break)
Token: ';' of type 16 (Semicolon)
Token: '\n        ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n      ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n      ' of type 6 (Whitespace)
Token: 'return' of type 129 (Return)
Token: ' ' of type 6 (Whitespace)
Token: 'false' of type 90 (False)
Token: ';' of type 16 (Semicolon)
Token: '\n    ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n    ' of type 6 (Whitespace)
Token: 'label' of type 108 (Label)
Token: ' ' of type 6 (Whitespace)
Token: 'End' of type 1 (Identifier)
Token: ';' of type 16 (Semicolon)
Token: '\n    ' of type 6 (Whitespace)
Token: 'return' of type 129 (Return)
Token: ' ' of type 6 (Whitespace)
Token: 'true' of type 142 (True)
Token: ';' of type 16 (Semicolon)
Token: '\n  ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n  ' of type 6 (Whitespace)
Token: 'function' of type 96 (Function)
Token: ' ' of type 6 (Whitespace)
Token: 'SendDeathEvent' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: '\n  ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: '\n    ' of type 6 (Whitespace)
Token: '// Not implemented yet\n' of type 7 (SingleLineComment)
Token: '  ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: '\n' of type 6 (Whitespace)

Block
| Class
| | Accepted: 'class' (Class)
| | Accepted: 'Player' (Identifier)
| | Accepted: '{' (OpenCurley)
| | Var
| | | Accepted: 'var' (Var)
| | | Accepted: 'Lives' (Identifier)
| | | SpecifiedType
| | | | Accepted: ':' (Colon)
| | | | Type
| | | | | NamedType
| | | | | | Accepted: 'Integer' (Identifier)
| | | | | EndNamedType
| | | | EndType
| | | EndSpecifiedType
| | | Accepted: '=' (Assignment)
| | | Expression
| | | | Expression1
| | | | | Expression2
| | | | | | Expression3
| | | | | | | Expression4
| | | | | | | | Expression5
| | | | | | | | | Expression6
| | | | | | | | | | Expression7
| | | | | | | | | | | Value
| | | | | | | | | | | | Literal
| | | | | | | | | | | | | Accepted: '9' (IntegerLiteral)
| | | | | | | | | | | | EndLiteral
| | | | | | | | | | | EndValue
| | | | | | | | | | EndExpression7
| | | | | | | | | EndExpression6
| | | | | | | | | Accepted: '*' (Asterisk)
| | | | | | | | | Expression6
| | | | | | | | | | Expression7
| | | | | | | | | | | Value
| | | | | | | | | | | | Literal
| | | | | | | | | | | | | Accepted: '1' (IntegerLiteral)
| | | | | | | | | | | | EndLiteral
| | | | | | | | | | | EndValue
| | | | | | | | | | EndExpression7
| | | | | | | | | EndExpression6
| | | | | | | | EndExpression5
| | | | | | | | Accepted: '+' (Plus)
| | | | | | | | Expression5
| | | | | | | | | Expression6
| | | | | | | | | | Expression7
| | | | | | | | | | | Value
| | | | | | | | | | | | Literal
| | | | | | | | | | | | | Accepted: '0' (IntegerLiteral)
| | | | | | | | | | | | EndLiteral
| | | | | | | | | | | EndValue
| | | | | | | | | | EndExpression7
| | | | | | | | | EndExpression6
| | | | | | | | EndExpression5
| | | | | | | EndExpression4
| | | | | | EndExpression3
| | | | | EndExpression2
| | | | EndExpression1
| | | EndExpression
| | EndVar
| | Accepted: ';' (Semicolon)
| | Var
| | | Accepted: 'var' (Var)
| | | Accepted: 'Health' (Identifier)
| | | SpecifiedType
| | | | Accepted: ':' (Colon)
| | | | Type
| | | | | NamedType
| | | | | | Accepted: 'Float' (Identifier)
| | | | | EndNamedType
| | | | EndType
| | | EndSpecifiedType
| | | Accepted: '=' (Assignment)
| | | Expression
| | | | Expression1
| | | | | Expression2
| | | | | | Expression3
| | | | | | | Expression4
| | | | | | | | Expression5
| | | | | | | | | Expression6
| | | | | | | | | | Expression7
| | | | | | | | | | | Value
| | | | | | | | | | | | Literal
| | | | | | | | | | | | | Accepted: '100.0f' (FloatLiteral)
| | | | | | | | | | | | EndLiteral
| | | | | | | | | | | EndValue
| | | | | | | | | | EndExpression7
| | | | | | | | | EndExpression6
| | | | | | | | EndExpression5
| | | | | | | EndExpression4
| | | | | | EndExpression3
| | | | | EndExpression2
| | | | EndExpression1
| | | EndExpression
| | EndVar
| | Accepted: ';' (Semicolon)
| | Function
| | | Accepted: 'function' (Function)
| | | Accepted: 'ApplyDamage' (Identifier)
| | | Accepted: '(' (OpenParentheses)
| | | Parameter
| | | | Accepted: 'amount' (Identifier)
| | | | SpecifiedType
| | | | | Accepted: ':' (Colon)
| | | | | Type
| | | | | | NamedType
| | | | | | | Accepted: 'Float' (Identifier)
| | | | | | EndNamedType
| | | | | EndType
| | | | EndSpecifiedType
| | | EndParameter
| | | Accepted: ')' (CloseParentheses)
| | | SpecifiedType
| | | | Accepted: ':' (Colon)
| | | | Type
| | | | | NamedType
| | | | | | Accepted: 'Boolean' (Identifier)
| | | | | EndNamedType
| | | | EndType
| | | EndSpecifiedType
| | | Scope
| | | | Accepted: '{' (OpenCurley)
| | | | Statement
| | | | | DelimitedStatement
| | | | | | Expression
| | | | | | | Expression1
| | | | | | | | Expression2
| | | | | | | | | Expression3
| | | | | | | | | | Expression4
| | | | | | | | | | | Expression5
| | | | | | | | | | | | Expression6
| | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | Accepted: 'Health' (Identifier)
| | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | EndExpression6
| | | | | | | | | | | EndExpression5
| | | | | | | | | | EndExpression4
| | | | | | | | | EndExpression3
| | | | | | | | EndExpression2
| | | | | | | EndExpression1
| | | | | | | Accepted: '-=' (AssignmentMinus)
| | | | | | | Expression
| | | | | | | | Expression1
| | | | | | | | | Expression2
| | | | | | | | | | Expression3
| | | | | | | | | | | Expression4
| | | | | | | | | | | | Expression5
| | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | Accepted: 'amount' (Identifier)
| | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | EndExpression5
| | | | | | | | | | | EndExpression4
| | | | | | | | | | EndExpression3
| | | | | | | | | EndExpression2
| | | | | | | | EndExpression1
| | | | | | | EndExpression
| | | | | | EndExpression
| | | | | EndDelimitedStatement
| | | | | Accepted: ';' (Semicolon)
| | | | EndStatement
| | | | Statement
| | | | | FreeStatement
| | | | | | If
| | | | | | | Accepted: 'if' (If)
| | | | | | | GroupedExpression
| | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | Expression
| | | | | | | | | Expression1
| | | | | | | | | | Expression2
| | | | | | | | | | | Expression3
| | | | | | | | | | | | Expression4
| | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | Accepted: 'Health' (Identifier)
| | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | Accepted: '<=' (LessThanOrEqualTo)
| | | | | | | | | | | | Expression4
| | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | Accepted: '0.0f' (FloatLiteral)
| | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | EndExpression4
| | | | | | | | | | | EndExpression3
| | | | | | | | | | EndExpression2
| | | | | | | | | EndExpression1
| | | | | | | | EndExpression
| | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | EndGroupedExpression
| | | | | | | Scope
| | | | | | | | Accepted: '{' (OpenCurley)
| | | | | | | | Statement
| | | | | | | | | DelimitedStatement
| | | | | | | | | | Expression
| | | | | | | | | | | Expression1
| | | | | | | | | | | | Expression2
| | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | Accepted: '--' (Decrement)
| | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | | | Accepted: 'Lives' (Identifier)
| | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | EndExpression2
| | | | | | | | | | | EndExpression1
| | | | | | | | | | EndExpression
| | | | | | | | | EndDelimitedStatement
| | | | | | | | | Accepted: ';' (Semicolon)
| | | | | | | | EndStatement
| | | | | | | | Statement
| | | | | | | | | DelimitedStatement
| | | | | | | | | | Expression
| | | | | | | | | | | Expression1
| | | | | | | | | | | | Expression2
| | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | | | Accepted: 'Health' (Identifier)
| | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | EndExpression2
| | | | | | | | | | | EndExpression1
| | | | | | | | | | | Accepted: '=' (Assignment)
| | | | | | | | | | | Expression
| | | | | | | | | | | | Expression1
| | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | Accepted: '100.0f' (FloatLiteral)
| | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | EndExpression1
| | | | | | | | | | | EndExpression
| | | | | | | | | | EndExpression
| | | | | | | | | EndDelimitedStatement
| | | | | | | | | Accepted: ';' (Semicolon)
| | | | | | | | EndStatement
| | | | | | | | Statement
| | | | | | | | | DelimitedStatement
| | | | | | | | | | Expression
| | | | | | | | | | | Expression1
| | | | | | | | | | | | Expression2
| | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | | | Accepted: 'SendDeathEvent' (Identifier)
| | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | | Call
| | | | | | | | | | | | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | | | | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | | | | | | | | | | | EndCall
| | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | EndExpression2
| | | | | | | | | | | EndExpression1
| | | | | | | | | | EndExpression
| | | | | | | | | EndDelimitedStatement
| | | | | | | | | Accepted: ';' (Semicolon)
| | | | | | | | EndStatement
| | | | | | | | Statement
| | | | | | | | | DelimitedStatement
| | | | | | | | | | Goto
| | | | | | | | | | | Accepted: 'goto' (Goto)
| | | | | | | | | | | Accepted: 'End' (Identifier)
| | | | | | | | | | EndGoto
| | | | | | | | | EndDelimitedStatement
| | | | | | | | | Accepted: ';' (Semicolon)
| | | | | | | | EndStatement
| | | | | | | | Accepted: '}' (CloseCurley)
| | | | | | | EndScope
| | | | | | | Else
| | | | | | | | Accepted: 'else' (Else)
| | | | | | | | Scope
| | | | | | | | | Accepted: '{' (OpenCurley)
| | | | | | | | | Statement
| | | | | | | | | | FreeStatement
| | | | | | | | | | | While
| | | | | | | | | | | | Accepted: 'while' (While)
| | | | | | | | | | | | GroupedExpression
| | | | | | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | | | | | | Accepted: 'Health' (Identifier)
| | | | | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | Accepted: '<' (LessThan)
| | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | Accepted: '50.0f' (FloatLiteral)
| | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | | | | | EndGroupedExpression
| | | | | | | | | | | | Scope
| | | | | | | | | | | | | Accepted: '{' (OpenCurley)
| | | | | | | | | | | | | Statement
| | | | | | | | | | | | | | DelimitedStatement
| | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'Health' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | Accepted: '+=' (AssignmentPlus)
| | | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '1.0f' (FloatLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | Accepted: '*' (Asterisk)
| | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '2' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | EndDelimitedStatement
| | | | | | | | | | | | | | Accepted: ';' (Semicolon)
| | | | | | | | | | | | | EndStatement
| | | | | | | | | | | | | Statement
| | | | | | | | | | | | | | FreeStatement
| | | | | | | | | | | | | | | If
| | | | | | | | | | | | | | | | Accepted: 'if' (If)
| | | | | | | | | | | | | | | | GroupedExpression
| | | | | | | | | | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'Health' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | | | | | | | | | Cast
| | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'as' (As)
| | | | | | | | | | | | | | | | | | | | | | | | | | Type
| | | | | | | | | | | | | | | | | | | | | | | | | | | NamedType
| | | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'Integer' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | | | EndNamedType
| | | | | | | | | | | | | | | | | | | | | | | | | | EndType
| | | | | | | | | | | | | | | | | | | | | | | | | EndCast
| | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | | Accepted: '%' (Modulo)
| | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '2' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | | | Accepted: '==' (Equality)
| | | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '0' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | | | | | | | | | EndGroupedExpression
| | | | | | | | | | | | | | | | Scope
| | | | | | | | | | | | | | | | | Accepted: '{' (OpenCurley)
| | | | | | | | | | | | | | | | | Statement
| | | | | | | | | | | | | | | | | | DelimitedStatement
| | | | | | | | | | | | | | | | | | | Accepted: 'continue' (Continue)
| | | | | | | | | | | | | | | | | | EndDelimitedStatement
| | | | | | | | | | | | | | | | | | Accepted: ';' (Semicolon)
| | | | | | | | | | | | | | | | | EndStatement
| | | | | | | | | | | | | | | | | Accepted: '}' (CloseCurley)
| | | | | | | | | | | | | | | | EndScope
| | | | | | | | | | | | | | | EndIf
| | | | | | | | | | | | | | EndFreeStatement
| | | | | | | | | | | | | EndStatement
| | | | | | | | | | | | | Statement
| | | | | | | | | | | | | | DelimitedStatement
| | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'Health' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | Accepted: '*=' (AssignmentMultiply)
| | | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '1.1f' (FloatLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | EndDelimitedStatement
| | | | | | | | | | | | | | Accepted: ';' (Semicolon)
| | | | | | | | | | | | | EndStatement
| | | | | | | | | | | | | Statement
| | | | | | | | | | | | | | FreeStatement
| | | | | | | | | | | | | | | If
| | | | | | | | | | | | | | | | Accepted: 'if' (If)
| | | | | | | | | | | | | | | | GroupedExpression
| | | | | | | | | | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | | | | | | | | | Expression
| | | | | | | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'this' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | | MemberAccess
| | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '.' (Dot)
| | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: 'Health' (Identifier)
| | | | | | | | | | | | | | | | | | | | | | | | | EndMemberAccess
| | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | | | Accepted: '>' (GreaterThan)
| | | | | | | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | | | | | | Accepted: '30.0f' (FloatLiteral)
| | | | | | | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | | | | | | EndExpression
| | | | | | | | | | | | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | | | | | | | | | | | EndGroupedExpression
| | | | | | | | | | | | | | | | Scope
| | | | | | | | | | | | | | | | | Accepted: '{' (OpenCurley)
| | | | | | | | | | | | | | | | | Statement
| | | | | | | | | | | | | | | | | | DelimitedStatement
| | | | | | | | | | | | | | | | | | | Accepted: 'break' (Break)
| | | | | | | | | | | | | | | | | | EndDelimitedStatement
| | | | | | | | | | | | | | | | | | Accepted: ';' (Semicolon)
| | | | | | | | | | | | | | | | | EndStatement
| | | | | | | | | | | | | | | | | Accepted: '}' (CloseCurley)
| | | | | | | | | | | | | | | | EndScope
| | | | | | | | | | | | | | | EndIf
| | | | | | | | | | | | | | EndFreeStatement
| | | | | | | | | | | | | EndStatement
| | | | | | | | | | | | | Accepted: '}' (CloseCurley)
| | | | | | | | | | | | EndScope
| | | | | | | | | | | EndWhile
| | | | | | | | | | EndFreeStatement
| | | | | | | | | EndStatement
| | | | | | | | | Statement
| | | | | | | | | | DelimitedStatement
| | | | | | | | | | | Return
| | | | | | | | | | | | Accepted: 'return' (Return)
| | | | | | | | | | | | Expression
| | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | Accepted: 'false' (False)
| | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | EndExpression
| | | | | | | | | | | EndReturn
| | | | | | | | | | EndDelimitedStatement
| | | | | | | | | | Accepted: ';' (Semicolon)
| | | | | | | | | EndStatement
| | | | | | | | | Accepted: '}' (CloseCurley)
| | | | | | | | EndScope
| | | | | | | EndElse
| | | | | | EndIf
| | | | | EndFreeStatement
| | | | EndStatement
| | | | Statement
| | | | | DelimitedStatement
| | | | | | Label
| | | | | | | Accepted: 'label' (Label)
| | | | | | | Accepted: 'End' (Identifier)
| | | | | | EndLabel
| | | | | EndDelimitedStatement
| | | | | Accepted: ';' (Semicolon)
| | | | EndStatement
| | | | Statement
| | | | | DelimitedStatement
| | | | | | Return
| | | | | | | Accepted: 'return' (Return)
| | | | | | | Expression
| | | | | | | | Expression1
| | | | | | | | | Expression2
| | | | | | | | | | Expression3
| | | | | | | | | | | Expression4
| | | | | | | | | | | | Expression5
| | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | Accepted: 'true' (True)
| | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | EndExpression5
| | | | | | | | | | | EndExpression4
| | | | | | | | | | EndExpression3
| | | | | | | | | EndExpression2
| | | | | | | | EndExpression1
| | | | | | | EndExpression
| | | | | | EndReturn
| | | | | EndDelimitedStatement
| | | | | Accepted: ';' (Semicolon)
| | | | EndStatement
| | | | Accepted: '}' (CloseCurley)
| | | EndScope
| | EndFunction
| | Function
| | | Accepted: 'function' (Function)
| | | Accepted: 'SendDeathEvent' (Identifier)
| | | Accepted: '(' (OpenParentheses)
| | | Accepted: ')' (CloseParentheses)
| | | Scope
| | | | Accepted: '{' (OpenCurley)
| | | | Accepted: '}' (CloseCurley)
| | | EndScope
| | EndFunction
| | Accepted: '}' (CloseCurley)
| EndClass
EndBlock

Parsing Successful

BlockNode
| ClassNode(Player)
| | VariableNode(Lives)
| | | NamedTypeNode(Integer)
| | | BinaryOperatorNode(+)
| | | | BinaryOperatorNode(*)
| | | | | LiteralNode(9)
| | | | | LiteralNode(1)
| | | | LiteralNode(0)
| | VariableNode(Health)
| | | NamedTypeNode(Float)
| | | LiteralNode(100.0f)
| | FunctionNode(ApplyDamage)
| | | ParameterNode(amount)
| | | | NamedTypeNode(Float)
| | | NamedTypeNode(Boolean)
| | | ScopeNode
| | | | BinaryOperatorNode(-=)
| | | | | MemberAccessNode(., Health)
| | | | | | NameReferenceNode(this)
| | | | | NameReferenceNode(amount)
| | | | IfNode
| | | | | BinaryOperatorNode(<=)
| | | | | | MemberAccessNode(., Health)
| | | | | | | NameReferenceNode(this)
| | | | | | LiteralNode(0.0f)
| | | | | ScopeNode
| | | | | | UnaryOperatorNode(--)
| | | | | | | MemberAccessNode(., Lives)
| | | | | | | | NameReferenceNode(this)
| | | | | | BinaryOperatorNode(=)
| | | | | | | MemberAccessNode(., Health)
| | | | | | | | NameReferenceNode(this)
| | | | | | | LiteralNode(100.0f)
| | | | | | CallNode
| | | | | | | MemberAccessNode(., SendDeathEvent)
| | | | | | | | NameReferenceNode(this)
| | | | | | GotoNode(End)
| | | | | IfNode
| | | | | | ScopeNode
| | | | | | | WhileNode
| | | | | | | | BinaryOperatorNode(<)
| | | | | | | | | MemberAccessNode(., Health)
| | | | | | | | | | NameReferenceNode(this)
| | | | | | | | | LiteralNode(50.0f)
| | | | | | | | ScopeNode
| | | | | | | | | BinaryOperatorNode(+=)
| | | | | | | | | | MemberAccessNode(., Health)
| | | | | | | | | | | NameReferenceNode(this)
| | | | | | | | | | BinaryOperatorNode(*)
| | | | | | | | | | | LiteralNode(1.0f)
| | | | | | | | | | | LiteralNode(2)
| | | | | | | | | IfNode
| | | | | | | | | | BinaryOperatorNode(==)
| | | | | | | | | | | BinaryOperatorNode(%)
| | | | | | | | | | | | CastNode
| | | | | | | | | | | | | MemberAccessNode(., Health)
| | | | | | | | | | | | | | NameReferenceNode(this)
| | | | | | | | | | | | | NamedTypeNode(Integer)
| | | | | | | | | | | | LiteralNode(2)
| | | | | | | | | | | LiteralNode(0)
| | | | | | | | | | ScopeNode
| | | | | | | | | | | ContinueNode
| | | | | | | | | BinaryOperatorNode(*=)
| | | | | | | | | | MemberAccessNode(., Health)
| | | | | | | | | | | NameReferenceNode(this)
| | | | | | | | | | LiteralNode(1.1f)
| | | | | | | | | IfNode
| | | | | | | | | | BinaryOperatorNode(>)
| | | | | | | | | | | MemberAccessNode(., Health)
| | | | | | | | | | | | NameReferenceNode(this)
| | | | | | | | | | | LiteralNode(30.0f)
| | | | | | | | | | ScopeNode
| | | | | | | | | | | BreakNode
| | | | | | | ReturnNode
| | | | | | | | LiteralNode(false)
| | | | LabelNode(End)
| | | | ReturnNode
| | | | | LiteralNode(true)
| | FunctionNode(SendDeathEvent)
| | | ScopeNode
*******************************************

************** PART 3 TEST 18 **************
Token: '5' of type 2 (IntegerLiteral)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)

Expression
| Expression1
| | Expression2
| | | Expression3
| | | | Expression4
| | | | | Expression5
| | | | | | Expression6
| | | | | | | Expression7
| | | | | | | | Value
| | | | | | | | | Literal
| | | | | | | | | | Accepted: '5' (IntegerLiteral)
| | | | | | | | | EndLiteral
| | | | | | | | EndValue
| | | | | | | EndExpression7
| | | | | | EndExpression6
| | | | | EndExpression5
| | | | | Accepted: '+' (Plus)
| | | | EndExpression4*
| | | EndExpression3*
| | EndExpression2*
| EndExpression1*
EndExpression*

Parsing Failed (Exception)
*******************************************

************** PART 3 TEST 19 **************
Token: 'var' of type 152 (Var)
Token: ' ' of type 6 (Whitespace)
Token: 'gCount' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: ':' of type 17 (Colon)
Token: ' ' of type 6 (Whitespace)
Token: 'Integer' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '=' of type 23 (Assignment)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: 'a' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '+' of type 39 (Plus)
Token: ' ' of type 6 (Whitespace)
Token: 'b' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '*' of type 41 (Asterisk)
Token: ' ' of type 6 (Whitespace)
Token: '9' of type 2 (IntegerLiteral)

Block
| Var
| | Accepted: 'var' (Var)
| | Accepted: 'gCount' (Identifier)
| | SpecifiedType
| | | Accepted: ':' (Colon)
| | | Type
| | | | NamedType
| | | | | Accepted: 'Integer' (Identifier)
| | | | EndNamedType
| | | EndType
| | EndSpecifiedType
| | Accepted: '=' (Assignment)
| | Expression
| | | Expression1
| | | | Expression2
| | | | | Expression3
| | | | | | Expression4
| | | | | | | Expression5
| | | | | | | | Expression6
| | | | | | | | | Expression7
| | | | | | | | | | Value
| | | | | | | | | | | GroupedExpression
| | | | | | | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | | | | | | Expression
| | | | | | | | | | | | | Expression1
| | | | | | | | | | | | | | Expression2
| | | | | | | | | | | | | | | Expression3
| | | | | | | | | | | | | | | | Expression4
| | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | | | Accepted: 'a' (Identifier)
| | | | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | | Accepted: '+' (Plus)
| | | | | | | | | | | | | | | | | Expression5
| | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | | | | | | Accepted: 'b' (Identifier)
| | | | | | | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | | Accepted: '*' (Asterisk)
| | | | | | | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | | | | | | Accepted: '9' (IntegerLiteral)
| | | | | | | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | | | | | | EndExpression5
| | | | | | | | | | | | | | | | EndExpression4
| | | | | | | | | | | | | | | EndExpression3
| | | | | | | | | | | | | | EndExpression2
| | | | | | | | | | | | | EndExpression1
| | | | | | | | | | | | EndExpression
| | | | | | | | | | | EndGroupedExpression*
| | | | | | | | | | EndValue*
| | | | | | | | | EndExpression7*
| | | | | | | | EndExpression6*
| | | | | | | EndExpression5*
| | | | | | EndExpression4*
| | | | | EndExpression3*
| | | | EndExpression2*
| | | EndExpression1*
| | EndExpression*
| EndVar*
EndBlock*

Parsing Failed (Exception)
*******************************************

************** PART 3 TEST 20 **************
Token: 'function' of type 96 (Function)
Token: ' ' of type 6 (Whitespace)
Token: 'Explode' of type 1 (Identifier)
Token: '(' of type 12 (OpenParentheses)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: 'if' of type 100 (If)
Token: ' ' of type 6 (Whitespace)
Token: '(' of type 12 (OpenParentheses)
Token: 'a' of type 1 (Identifier)
Token: ' ' of type 6 (Whitespace)
Token: '>' of type 26 (GreaterThan)
Token: ' ' of type 6 (Whitespace)
Token: '5' of type 2 (IntegerLiteral)
Token: ')' of type 13 (CloseParentheses)
Token: ' ' of type 6 (Whitespace)
Token: '{' of type 10 (OpenCurley)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)
Token: ' ' of type 6 (Whitespace)
Token: 'else' of type 84 (Else)
Token: ' ' of type 6 (Whitespace)
Token: '}' of type 11 (CloseCurley)

Block
| Function
| | Accepted: 'function' (Function)
| | Accepted: 'Explode' (Identifier)
| | Accepted: '(' (OpenParentheses)
| | Accepted: ')' (CloseParentheses)
| | Scope
| | | Accepted: '{' (OpenCurley)
| | | Statement
| | | | FreeStatement
| | | | | If
| | | | | | Accepted: 'if' (If)
| | | | | | GroupedExpression
| | | | | | | Accepted: '(' (OpenParentheses)
| | | | | | | Expression
| | | | | | | | Expression1
| | | | | | | | | Expression2
| | | | | | | | | | Expression3
| | | | | | | | | | | Expression4
| | | | | | | | | | | | Expression5
| | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | NameReference
| | | | | | | | | | | | | | | | | Accepted: 'a' (Identifier)
| | | | | | | | | | | | | | | | EndNameReference
| | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | EndExpression5
| | | | | | | | | | | EndExpression4
| | | | | | | | | | | Accepted: '>' (GreaterThan)
| | | | | | | | | | | Expression4
| | | | | | | | | | | | Expression5
| | | | | | | | | | | | | Expression6
| | | | | | | | | | | | | | Expression7
| | | | | | | | | | | | | | | Value
| | | | | | | | | | | | | | | | Literal
| | | | | | | | | | | | | | | | | Accepted: '5' (IntegerLiteral)
| | | | | | | | | | | | | | | | EndLiteral
| | | | | | | | | | | | | | | EndValue
| | | | | | | | | | | | | | EndExpression7
| | | | | | | | | | | | | EndExpression6
| | | | | | | | | | | | EndExpression5
| | | | | | | | | | | EndExpression4
| | | | | | | | | | EndExpression3
| | | | | | | | | EndExpression2
| | | | | | | | EndExpression1
| | | | | | | EndExpression
| | | | | | | Accepted: ')' (CloseParentheses)
| | | | | | EndGroupedExpression
| | | | | | Scope
| | | | | | | Accepted: '{' (OpenCurley)
| | | | | | | Accepted: '}' (CloseCurley)
| | | | | | EndScope
| | | | | | Else
| | | | | | | Accepted: 'else' (Else)
| | | | | | EndElse*
| | | | | EndIf*
| | | | EndFreeStatement*
| | | EndStatement*
| | EndScope*
| EndFunction*
EndBlock*

Parsing Failed (Exception)
*******************************************

Press enter/return to exit...
